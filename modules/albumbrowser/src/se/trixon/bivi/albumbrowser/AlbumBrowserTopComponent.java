/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package se.trixon.bivi.albumbrowser;

import java.awt.BorderLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.awt.ActionReferences;
import org.openide.explorer.view.BeanTreeView;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import se.trixon.bivi.core.BiviTopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//se.trixon.bivi.albumbrowser//AlbumBrowser//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "AlbumBrowserTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "se.trixon.bivi.albumbrowser.AlbumBrowserTopComponent")
@ActionReferences({
    @ActionReference(path = "Menu/Browse", position = 0),
    @ActionReference(path = "Shortcuts", name = "D-1")
})
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_AlbumBrowserAction",
        preferredID = "AlbumBrowserTopComponent"
)
public final class AlbumBrowserTopComponent extends BiviTopComponent {

    private BeanTreeView mBeanTreeView;

    public AlbumBrowserTopComponent() {
        mBundle = NbBundle.getBundle(getClass());
        initComponents();
        setName(mBundle.getString("CTL_AlbumBrowserTopComponent"));
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);

        init();
    }

    private void init() {
        mBeanTreeView = new BeanTreeView();
        add(mBeanTreeView, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
    }

    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
        p.setProperty("version", "1.0");
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
    }
}
