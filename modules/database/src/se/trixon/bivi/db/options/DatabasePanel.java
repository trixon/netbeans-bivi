/* 
 * Copyright 2015 Patrik Karlsson.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package se.trixon.bivi.db.options;

import java.io.File;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.openide.util.Exceptions;
import se.trixon.almond.dialogs.FileChooserPanel;
import se.trixon.bivi.db.DbManager;

/**
 *
 * @author Patrik Karlsson <patrik@trixon.se>
 */
final class DatabasePanel extends javax.swing.JPanel {

    private static final DbManager mManager = DbManager.INSTANCE;
    private final DatabaseOptionsPanelController mController;

    DatabasePanel(DatabaseOptionsPanelController controller) {
        mController = controller;
        initComponents();
        init();
    }

    void cancel() {
        try {
            albumRootsPanel.cancel();
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    private void init() {
        albumRootsPanel.setController(mController);
        dirChooserPanel.setDropMode(FileChooserPanel.DropMode.SINGLE);
        dirChooserPanel.setMode(JFileChooser.DIRECTORIES_ONLY);
        dirChooserPanel.getTextField().getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void changedUpdate(DocumentEvent e) {
                mController.changed();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                mController.changed();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                mController.changed();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dirChooserPanel = new se.trixon.almond.dialogs.FileChooserPanel();
        albumRootsLabel = new javax.swing.JLabel();
        albumRootsPanel = new se.trixon.bivi.db.options.AlbumRootsPanel();

        dirChooserPanel.setHeader(org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.dirChooserPanel.header")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(albumRootsLabel, org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.albumRootsLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dirChooserPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(albumRootsLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(albumRootsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dirChooserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(albumRootsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(albumRootsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        try {
            dirChooserPanel.setPath(mManager.getPath());
            albumRootsPanel.load();
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    void store() {
        mManager.setPath(new File(dirChooserPanel.getPath()));
        try {
            albumRootsPanel.store();
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    boolean valid() {
        File dbDir = new File(dirChooserPanel.getPath());
        boolean valid = dbDir.isDirectory();

        return valid;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel albumRootsLabel;
    private se.trixon.bivi.db.options.AlbumRootsPanel albumRootsPanel;
    private se.trixon.almond.dialogs.FileChooserPanel dirChooserPanel;
    // End of variables declaration//GEN-END:variables
}
